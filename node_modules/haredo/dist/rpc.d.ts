import { InitialChain } from './haredo';
import { Consumer } from './consumer';
import { TypedEventEmitter } from './events';
import { Loggers } from './state';
export interface Events {
    resolve: void;
    reject: void;
    drain: void;
}
export interface StartRpc {
    consumer: Consumer;
    emitter: TypedEventEmitter<Events>;
    add<TReply>(correlationId: string): {
        promise: Promise<TReply>;
        queue: string;
    };
    close(): Promise<void>;
}
export declare const startRpc: <TMessage, TReply>(haredo: InitialChain<TMessage, TReply>, { info, debug, warning, error }: Loggers) => Promise<StartRpc>;
export declare const generateCorrelationId: () => string;
