"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isHaredoMessage = exports.makeHaredoMessage = void 0;
const events_1 = require("./events");
const utils_1 = require("./utils");
exports.makeHaredoMessage = (raw, parseJson, queue, methods) => {
    const state = {
        isHandled: false,
        isAcked: false,
        isNacked: false,
        isReplied: false,
        reply: undefined,
    };
    const dataString = raw.content.toString();
    const data = parseJson ? utils_1.parseJSON(dataString) : dataString;
    const emitter = events_1.makeEmitter();
    return {
        emitter,
        raw,
        dataString,
        data,
        queue,
        isHandled: () => state.isHandled,
        isAcked: () => state.isAcked,
        isNacked: () => state.isNacked,
        isReplied: () => state.isReplied,
        getReply: () => state.reply,
        ack: () => {
            if (state.isHandled) {
                return;
            }
            state.isAcked = true;
            state.isHandled = true;
            methods.ack();
            emitter.emit('handled');
        },
        nack: (requeue = true) => {
            if (state.isHandled) {
                return;
            }
            state.isNacked = true;
            state.isHandled = true;
            methods.nack(requeue);
            emitter.emit('handled');
        },
        reply: (message) => {
            state.isReplied = true;
            state.reply = message;
            return methods.reply(message);
        },
        getHeader: (header) => raw.properties.headers[header],
        headers: raw.properties.headers,
        appId: raw.properties.appId,
        consumerTag: raw.fields.consumerTag,
        contentEncoding: raw.properties.contentEncoding,
        contentType: raw.properties.contentType,
        correlationId: raw.properties.correlationId,
        deliveryMode: raw.properties.deliveryMode,
        deliveryTag: raw.fields.deliveryTag,
        exchange: raw.fields.exchange,
        expiration: raw.properties.expiration,
        messageId: raw.properties.messageId,
        priority: raw.properties.priority,
        redelivered: raw.fields.redelivered,
        replyTo: raw.properties.replyTo,
        routingKey: raw.fields.routingKey,
        timestamp: raw.properties.timestamp,
        type: raw.properties.type,
        userId: raw.properties.userId,
        metaType: 'message',
        deliveryCount: raw.properties.headers['x-delivery-count']
    };
};
/**
 * Returns true if passed in object is an message. Acts as a type guard for Message.
 * @param obj Object to check
 */
exports.isHaredoMessage = (obj) => {
    return (obj === null || obj === void 0 ? void 0 : obj.metaType) === 'message';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFyZWRvLW1lc3NhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaGFyZWRvLW1lc3NhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscUNBQTBEO0FBQzFELG1DQUFvQztBQWdKdkIsUUFBQSxpQkFBaUIsR0FBRyxDQUM3QixHQUFZLEVBQ1osU0FBa0IsRUFDbEIsS0FBYSxFQUNiLE9BQXdCLEVBQ08sRUFBRTtJQUNqQyxNQUFNLEtBQUssR0FBRztRQUNWLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLE9BQU8sRUFBRSxLQUFLO1FBQ2QsUUFBUSxFQUFFLEtBQUs7UUFDZixTQUFTLEVBQUUsS0FBSztRQUNoQixLQUFLLEVBQUUsU0FBbUI7S0FDN0IsQ0FBQztJQUVGLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDMUMsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxpQkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7SUFFNUQsTUFBTSxPQUFPLEdBQUcsb0JBQVcsRUFBdUIsQ0FBQztJQUNuRCxPQUFPO1FBQ0gsT0FBTztRQUNQLEdBQUc7UUFDSCxVQUFVO1FBQ1YsSUFBSTtRQUNKLEtBQUs7UUFDTCxTQUFTLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVM7UUFDaEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPO1FBQzVCLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUTtRQUM5QixTQUFTLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVM7UUFDaEMsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLO1FBQzNCLEdBQUcsRUFBRSxHQUFHLEVBQUU7WUFDTixJQUFJLEtBQUssQ0FBQyxTQUFTLEVBQUU7Z0JBQ2pCLE9BQU87YUFD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